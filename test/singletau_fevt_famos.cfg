process PROD  = 
{

    # The number of events to be processed.
    untracked PSet maxEvents = {untracked int32 input = 2000}

    include "FastSimulation/Configuration/data/CommonInputsFake.cff"
    include "FastSimulation/HighLevelTrigger/data/common/NoHLTSetup.cff"
    
    service =  RandomNumberGeneratorService {
	untracked uint32 sourceSeed = 1234
	# This is to initialize the random engine of Famos
	# Watch out! This works only if the FamosProducer label is "famosSimHits"
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 223458
#	    untracked uint32 famosSimHits = 23579
	    untracked uint32 famosPileUp = 918273
	    untracked uint32 famosSimHits = 235791312
	    untracked uint32 siTrackerGaussianSmearingRecHits = 34680
	    untracked uint32 caloRecHits = 754321
	    untracked uint32 MuonSimHits = 834032
	    untracked uint32 muonDTDigis = 67673876
	    untracked uint32 muonCSCDigis = 525432
	    untracked uint32 muonRPCDigis = 524964
	}
    }
    
    include "Configuration/Generator/data/PythiaUESettings.cfi"

    source = PythiaSource 
    {
	untracked bool pythiaVerbosity = false
	#  possibility to run single or double back-to-back particles with PYTHIA
	# if ParticleID = 0, run PYTHIA
	untracked int32 ParticleID = -15
	untracked bool DoubleParticle = false
	untracked double Ptmin = 50. 
	untracked double Ptmax = 50.0001
	untracked double Etamin = 0 
	untracked double Etamax = 1
	untracked double Phimin = 0. 
	untracked double Phimax = 360.
	
	PSet PythiaParameters = 
	{
	    # This is a vector of ParameterSet names to be read, in this order
	    vstring parameterSets = 
	    {
		"pythiaUESettings",
		"pythiaTauJets"
	    }
	    using pythiaUESettingsBlock
	    
	    # Tau jets (configuration by A. Nikitenko)
	    vstring pythiaTauJets = 
	    {
		'MDME(89,1)=0      ! no tau->electron',
		'MDME(90,1)=0      ! no tau->muon'
	    }
	}
    }
    
    
    
    # Famos sequences
    include "FastSimulation/Configuration/data/FamosSequences.cff"
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true
    replace famosPileUp.PileUpSimulator.averageNumber = 0.0


    # replace famosSimHits.MaterialEffects.PairProduction = false
    # replace famosSimHits.MaterialEffects.Bremsstrahlung = false
    # replace famosSimHits.MaterialEffects.EnergyLoss = false
    # replace famosSimHits.MaterialEffects.MultipleScattering = false
    # replace famosSimHits.MaterialEffects.NuclearInteraction = false

    # No vertex smearing
    replace famosSimHits.VertexGenerator.BetaStar = 0.00001
    replace famosSimHits.VertexGenerator.SigmaZ = 0.00001
    
    # replace famosSimHits.ParticleFilter.forbiddenPdgCodes = {22}

    service = MessageLogger  {
	untracked vstring destinations   = { "cout" }
	untracked vstring categories     = {
	    "PFClusterProducer",
	    # "PFSimParticleProducer",
	    "PFBlockProducer",
	    "PFProducer"
	}
	untracked vstring debugModules   = { "*" }
	untracked PSet cout = { 
	    untracked string threshold = "INFO"
	    untracked PSet INFO            = { untracked int32 limit = 0 }
	    untracked PSet DEBUG           = { untracked int32 limit = 0 }
	    untracked PSet PFClusterProducer = { 
		untracked int32 limit = 10000000
	    }
	    untracked PSet PFBlockProducer = { 
		untracked int32 limit = 10000000
	    }
	    untracked PSet PFProducer = { 
		untracked int32 limit = 10000000
	    }
	} 
    }


    #replace particleFlowRecHitECAL.verbose = true
    #replace particleFlowRecHitHCAL.verbose = true
    #replace particleFlowRecHitPS.verbose = true

    #replace particleFlowClusterECAL.verbose = true
    #replace particleFlowClusterHCAL.verbose = true
    #replace particleFlowClusterPS.verbose = true

    
    #replace particleFlowCluster.verbose = true
    #replace particleFlowBlock.verbose = true
    #replace particleFlow.verbose = true

    # replace particleFlowCluster.clustering_Hcal_CaloTowers = false

    module dump = EventContentAnalyzer {}

    path p1 = { 
	famosWithCaloTowersAndParticleFlow &
	caloJetMetGen,
	particleFlowSimParticle
    }
    
    module o1 = PoolOutputModule { 
	untracked string fileName = "blocks_famos.root" 
	untracked vstring outputCommands = 
	{
            "drop *",
            "keep recoPFRecHits_*_*_*",
            "keep recoPFClusters_*_*_*",
            "keep recoPFRecTracks_*_*_*",
	    "keep recoPFBlocks_particleFlowBlock_*_*",
	    "keep recoPFCandidates_particleFlow_*_*",
	    "keep recoCandidatesOwned_*_*_*",
            "keep recoPFSimParticles_*_*_*",
            "keep recoTracks_*_*_*",
	    "keep recoCaloJets_*_*_*",
	    "keep recoPFJets_*_*_*",
            "keep recoGenParticles_*_*_*",
	    "keep recoGenParticlesRefs_*_*_*",
	    "keep CaloTowersSorted_*_*_*",
	    "keep edmHepMCProduct_*_*_*"	    
	}
    }

    include "FastSimulation/Configuration/data/EventContent.cff"
    module aod = PoolOutputModule {
	untracked string fileName = "aod_famos.root" 
	using AODEventContent
    }

    endpath outpath = {o1, aod}
    
}		
