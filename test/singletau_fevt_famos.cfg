process PROD  = 
{

    # The number of events to be processed.
    untracked PSet maxEvents = {untracked int32 input = 2000}

    include "FastSimulation/Configuration/data/CommonInputsFake.cff"
    include "FastSimulation/Configuration/data/RandomServiceInitialization.cff"


    include "RecoParticleFlow/PFBlockProducer/test/singletau_source.cff"
    
    
    # Famos sequences
    include "FastSimulation/Configuration/data/FamosSequences.cff"
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true
    replace famosPileUp.PileUpSimulator.averageNumber = 0.0


    # replace famosSimHits.MaterialEffects.PairProduction = false
    # replace famosSimHits.MaterialEffects.Bremsstrahlung = false
    # replace famosSimHits.MaterialEffects.EnergyLoss = false
    # replace famosSimHits.MaterialEffects.MultipleScattering = false
    # replace famosSimHits.MaterialEffects.NuclearInteraction = false

    # No vertex smearing
    replace famosSimHits.VertexGenerator.BetaStar = 0.00001
    replace famosSimHits.VertexGenerator.SigmaZ = 0.00001
    
    # replace famosSimHits.ParticleFilter.forbiddenPdgCodes = {22}

    service = MessageLogger  {
	untracked vstring destinations   = { "cout" }
	untracked vstring categories     = {
	    "PFClusterProducer",
	    # "PFSimParticleProducer",
	    "PFBlockProducer",
	    "PFProducer"
	}
	untracked vstring debugModules   = { "*" }
	untracked PSet cout = { 
	    untracked string threshold = "INFO"
	    untracked PSet INFO            = { untracked int32 limit = 0 }
	    untracked PSet DEBUG           = { untracked int32 limit = 0 }
	    untracked PSet PFClusterProducer = { 
		untracked int32 limit = 10000000
	    }
	    untracked PSet PFBlockProducer = { 
		untracked int32 limit = 10000000
	    }
	    untracked PSet PFProducer = { 
		untracked int32 limit = 10000000
	    }
	} 
    }


    #replace particleFlowRecHitECAL.verbose = true
    #replace particleFlowRecHitHCAL.verbose = true
    #replace particleFlowRecHitPS.verbose = true

    #replace particleFlowClusterECAL.verbose = true
    #replace particleFlowClusterHCAL.verbose = true
    #replace particleFlowClusterPS.verbose = true

    
    #replace particleFlowCluster.verbose = true
    #replace particleFlowBlock.verbose = true
    #replace particleFlow.verbose = true

    # replace particleFlowCluster.clustering_Hcal_CaloTowers = false

    module dump = EventContentAnalyzer {}

    path p1 = { 
	famosWithCaloTowersAndParticleFlow &
	caloJetMetGen,
	particleFlowSimParticle
    }
    
    module o1 = PoolOutputModule { 
	untracked string fileName = "blocks_famos.root" 
	untracked vstring outputCommands = 
	{
            "drop *",
            "keep recoPFRecHits_*_*_*",
            "keep recoPFClusters_*_*_*",
            "keep recoPFRecTracks_*_*_*",
	    "keep recoPFBlocks_particleFlowBlock_*_*",
	    "keep recoPFCandidates_particleFlow_*_*",
	    "keep recoCandidatesOwned_*_*_*",
            "keep recoPFSimParticles_*_*_*",
            "keep recoTracks_*_*_*",
	    "keep recoCaloJets_*_*_*",
	    "keep recoPFJets_*_*_*",
            "keep recoGenParticles_*_*_*",
	    "keep recoGenParticlesRefs_*_*_*",
	    "keep CaloTowersSorted_*_*_*",          
	    "keep *_offlinePrimaryVertices_*_*",
            "keep *_offlinePrimaryVerticesFromCTFTracks_*_*",
	    "keep edmHepMCProduct_*_*_*"	    
	}
    }

    include "FastSimulation/Configuration/data/EventContent.cff"
    module aod = PoolOutputModule {
	untracked string fileName = "aod_famos.root" 
	using AODEventContent
    }

    endpath outpath = {o1, aod}
    
}		
